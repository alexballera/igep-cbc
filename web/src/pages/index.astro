---
import Layout from '../layouts/Layout.astro';
import SessionCard from '../components/SessionCard.astro';

// Use import.meta.glob for a more robust, modern approach.
// It returns an object with keys as URL paths relative to the project root.
const allFiles = import.meta.glob('/public/sesiones/sesion*/**/resumenes/*');

const sessions = {};

for (const path in allFiles) {
  // path is like '/public/sesiones/sesion1/resumenes/some_file.pdf'
  
  const sessionPath = path.split('/').find(part => part.startsWith('sesion'));
  if (!sessionPath) continue; // Skip if no 'sesionX' part found

  const sessionNumber = sessionPath.replace('sesion', '');
  
  if (!sessions[sessionNumber]) {
    sessions[sessionNumber] = {
      number: sessionNumber,
      files: []
    };
  }

  // The URL path should be relative to the site root, not the public folder.
  // Astro serves files from 'public' at the root.
  // So '/public/sesiones/file.pdf' becomes '/sesiones/file.pdf'
  const urlPath = path.replace('/public', '');
  const fileName = path.split('/').pop();

  sessions[sessionNumber].files.push({
    path: urlPath,
    name: fileName
  });
}

const sessionList = Object.values(sessions).sort((a, b) => parseInt(a.number) - parseInt(b.number));
---
<Layout title="IGEP - Material de Estudio">
  <main>
    <h1>Material de Estudio de IGEP</h1>
    <p>Recopilación de resúmenes, audios y videos de cada sesión.</p>
    <div class="card-grid">
      {sessionList.map(session => (
        <SessionCard 
          sessionNumber={session.number}
          files={session.files}
        />
      ))}
    </div>
  </main>
</Layout>
